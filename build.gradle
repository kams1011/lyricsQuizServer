plugins {
	id 'java'
//	id 'war'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'      // asciidoc파일을 변환해주고, Build폴더에 복사해주는 플러그인
}

group = 'kr.toy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

asciidoctor {
	dependsOn test    // gradle build 시 test -> asciidoctor 순으로 수행
}

bootJar {
	archiveFileName = 'lyricsQuizServer.jar'
	dependsOn asciidoctor // (1)
	from("${asciidoctor.outputDir}") { // (2)
		into 'static/docs'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.6.0'

	//Spring Rest Docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	//WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//JSON
	implementation 'com.fasterxml.jackson.core:jackson-core:2.10.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'

	//Configuration
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'



}

tasks.named('test') {
	useJUnitPlatform()
}
