plugins {
	id 'java'
//	id 'war'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'      // asciidoc파일을 변환해주고, Build폴더에 복사해주는 플러그인
	/**
	 * vue-project를 build하기 위한 설정
	 * - node gradle plugin 추가
	 */
	id "com.github.node-gradle.node" version "3.0.1"
}

group = 'kr.toy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

repositories {
	mavenCentral()
}

ext {
//	profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile
    set('profile', 'dev')
	set('springCloudVersion', "2021.0.4")
	snippetsDir = file('build/generated-snippets')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.6.0'

	//Spring Rest Docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	//WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//JSON
	implementation 'com.fasterxml.jackson.core:jackson-core:2.10.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'

	//Configuration
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	//Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: '6.1.5'

	// JWT library (jjwt)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'

	// H2 Database
	implementation 'com.h2database:h2'

	// OpenFeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.0'
//
	// Aws S3
//	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.174'

	// MIME Type Check
	implementation group: 'org.apache.tika', name: 'tika-core', version: '1.24'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//embedded-redis
	implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'

	//Log4J2
	implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

	//FFmpeg
	implementation 'net.bramp.ffmpeg:ffmpeg:0.6.2'

	testCompileOnly 'org.projectlombok:lombok:1.18.22' //테스트 환경에서 주입
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'	//테스트환경의 어노테이션 주입
}



test {
	dependsOn 'processResources', 'bootJarMainClassName'
	println 'Running test task...'
	outputs.dir snippetsDir
	useJUnitPlatform()
}

sourceSets {
	test {
		resources {
			srcDir 'src/test/java' // 테스트 리소스 디렉토리 경로 지정
		}
	}
}


apply from: 'asciidoc.gradle'
if (ext.profile == 'dev') {
	apply from: 'node-gradle.gradle'
}



